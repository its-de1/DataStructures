def merge(a,l,m,r)
    n1 = m-l+1
    left = Array.new(n1) 
    n2 = r-m
    right = Array.new(n2) 
    for i in 0...n1         
        left[i]= a[l+i]
    end
    for i in 0...n2          
        right[i]= a[m+1+i]
    end
    
    i=0
    j=0
    # Comparing and merging two sub arrays
    for k in l..r
        if i>=n1
            a[k]=right[j]
            j+=1
        elsif j>=n2
            a[k]=left[i]
            i+=1
        elsif left[i]>right[j]
            a[k]=right[j]
            j+=1
        else
            a[k]=left[i]
            i+=1
        end
    end
end

def Merge_Sort(a,l,r)
  starting = Process.clock_gettime(Process::CLOCK_MONOTONIC)
     if l<r
         m=l+(r-l)/2
         Merge_Sort(a,l,m)
         Merge_Sort(a,m+1,r)
         merge(a,l,m,r)
     end
   ending = Process.clock_gettime(Process::CLOCK_MONOTONIC)
   elapsed = ending - starting
   return elapsed 
end

Arr1=[1,34,2,54656,3543,678787,334,6,343,76,453,67]
puts "Time take by Merge_SortSort #{Merge_Sort(Arr,0,11)} "
